<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStripUp.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>141, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAeEgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAEeVJ
        REFUeJzt3XnQHVWZx/HvTUISQiCJSUjiJGyymIDIOoi4jLJowFEBldJRcRxcUUct/6BkpqzSGaccXBEL
        EJdCR2YEQbB0BhHZFEYZdRQCRDZZg2ELkpAIJO+dP07u8JK873tv3+c553T3+X2quur95/R9ut/bv9vL
        6XM6QJe8Opk/X6RYk3IXICL5KABECqYAECmYAkCkYAoAkYIpAEQKpgAQKZgCQKRgCgCRgikARAqmABAp
        mAJApGAKAJGCKQBECqYAECnYFId16H1+kYbSGYBIwRQAIgVTAIgUTAEgUjAFgEjBFAAiBVMAiBTMox+A
        iNTHbGAZsBTYBVgALNy8zAW2BaYD04BpCgCR5poOHAK8FDgM2I9woFfSNS4iks4S4IPAFcCTOBy/CgCR
        etsBeD9wPfbjVQEg0hB7A+cA6/A/8BUAIjW1N3A+MEK8A18BIFIzC4BvAZuIf+ArAERqYhLwAeAx0h34
        CgCRGtgZuJb0B74CQCSzE8jzq68AEMloEvA58h74CgCRDLYDLib/ga8AEElsFvAL8h/0CgCRxGYTpyef
        AkCk5mZSz4NfASAS2WTgR+Q/0Mdc9DqwSFynA0dn+NwHgRWjlnuBtZuXx0f9rTMAkUhOIt2v+QPAWcBy
        YH6VIhUAIv5eAKwn/kH/OcJgIEMP76cAEPE1A1hJ3AP/w4ThvcwUACK+Pk+cA381jgd+jwJAxM+LiPM6
        7w+AeTEKVgCI+JgM3Ijvgb8BODlm0QoAER/vw/fgvxvYJ3bRMa5VFCBSmlnAQ/gdF3cBu6YoXAEgYvdp
        /I6JPxAm9UhCASBi8xxC7zqP4+E+wihBySgARGz+CZ9jYSNhlp+kFAAiw9sev2G9Tk1cOxiKVQCIwIfw
        OQ4uI9Ns3QoAkeFMAm7DfgysZYhJPb0oAESGsxyfYyDLqX+PAkBkOBdg//7fg3Pf/qoUACLVzcVneu63
        pi58SwoAkepOxv7dvxHopC58tCx3HUVa4ASHdXyZGvwI6gxApJpF2F/5fZQwcEhWOgMQqe447MfO1wlD
        hmWnMwCRai7F9p3fRKI3/QahABAZ3AzCIB2W7/zVyaseh8e8AFnvYook9gpgunEdF3oU4kH3AESqOcLY
        vgtc5FGIF53Ciwzud9iOl1+kL3l8OgMQGdw8woQfFrX69VcAiAzuJdjvef3YoxAvCgCRwR1qbL+G0P23
        NhQAIoN7kbH9z4ARj0K8KABEBjMZOMi4jto8/+9RAIgMZi/sffcVACINtb+x/Xrgtx6FeFIAiAzGGgAr
        CO8A1IoCQGQw1uf/tfv1BwWAyKCWGdsrAEQaantgsXEdCgCRhnq+sf0INesA1KMAEOlvT2P7e4B1HoV4
        UwCI9GcNgNtdqohAASDS3+7G9re5VBGBAkCkv92M7RUAIg22i7G9LgFEGmo6sMC4Dp0BiDTUYuyDgNzl
        UEcUCgCRiVk7AD0M/NmjkBgUACITswbAfS5VROIxL4C030zg5cDhwFJg/qhlCrCW0NFlLaHTy0rgFuAG
        4FfU8C24Cp5rbF/rAAANCy5jmwy8hTCM1dMM//1YA1wA/C0hSJrmC9iOjzPTl1yNAkBGmwq8D7gT/2ng
        /gScgb1vfUr/jm2bT01fcjUKAOlZCvwv/gf+lstG4GxgxzSbZXIltm09MX3J1SgABOBkwrBVsQ/+Lc8I
        3p1i4wxuxraNr05fcjUKgLJ1gC+T9sDfcjkfmBV7Q4f0ELZtOyB9ydUoAMrVAc4i78HfW24BlsTd3Mom
        E55gWLbrL5JXXZECoFx1Ofh7yz3U6wbhfOzbtE3yqivK/U+XPN5L/v/9WMv91OdM4PnYtmVN+pKry/0P
        l/QOJnRPzf2/H29ZAcyOtvWDOwzbdvw+fcnVqCtweWYB3wOm5S5kAnsD38H+Eo7Vc4ztH3SpIiIFQHk+
        BeyUu4gBHA18JHMNc43tH3WpIiIFQFn2B96fu4gK/gX7hBwWc4ztFQBSGx3gK4RHW00xlfCkItelgAJA
        WuM44NDcRQzhxcA7M322AkBao/YvpUzgU9in5h6G9UmEAkBq4Rjss9v2jBC67v4VMI/Q0WUW4UWi1wP/
        Ctzh9Fk9i4C/d17nIFofAJD/ma/Edx0+/6s1wBEDfubrgFudPrdLOJhSjyfwc2PNRyaudygKgHY7EJ//
        01pg34qfPQM4z+nzu8CHK36+1U3Geg9KXO9QFADtdjb2/9EI4fR+GB3gGw41dAnvCqQcxm6VsV7rhCJJ
        KADaaybwOPb/0TeNdUwBrnGoowsca6ylig3GWq1PEZJQALTXSdj/P48QbvZZLSFcRljrucyhlkFsa6xz
        hIbcZFcAtNcV2P8/H3es52MO9YwAuzrWNJ7Fxjob8QQAFABttSNh7D3L/2YNsINjTdMI1/HW78wnHGsa
        zwuNNdZ2OrDRPE5ROsYltlID6ljs3X7PJtxD8PIk8GmH9ZzosI5+rC8CPeJSRQJtP0BGsG1fI67jxvAT
        bNs9AjwvQl3TgdXG2rrE79Z8grG+H0Wuz0VTv9xVbDS2b+I+2oHQU8/iCvx79EEYiORrDut5s8M6JjLf
        2P5hlyoia+KXuyprANR+TLcxHI79efm/eRQyjq8SzjAs3kjc7691zoLVLlVEVkIAPGVsP9WlirReZWz/
        NHCxRyHjuBv4qXEdC4GXOdQynkXG9rUfDQjKCADr1Mx1HjprPNYAuBx4zKOQCXzTYR1vcljHeBYa2+sM
        oCY2GNvneA3VYk9gF+M6fuBQRz8XEzoGWRxPvAFOrOP5/9GlisgUAP01LQBe7rCO/3RYRz8bsF9m7Ij9
        Zud4Fhvb3+9SRWQlBMATxvZNC4CXGtvfROisk8J5Dut4i8M6tjQNe/fn+zwKia2EAFhnbO/ZEy4FawD8
        xKWKwVyOvcPM8fjfp9kZWye1tfh2oIqmhACwXmc2KQAWY7/+v9KhjkFtBC40rmMW8NcOtYxmfY031RmU
        WQkBYE3ius5aO5bDjO03AVd7FFLBBQ7reIfDOkaz9oCM0YEqihIC4E/G9o14p3uzQ4ztb8C+v6q6kjAF
        t8Wr8Z2Fd6mxfSNeBIIyAsD6PLtJAfCXxvbXuVRRzSbCVGUWk4F3OdTSY52h+HaXKhIoIQCsM7Ra54dL
        ZQr2kX9zBAD4PA14D369Nq37sfaTgvaUEADWu8zWl0JS2Qf7I8tcAXAtcJdxHQuBt9lLYSfsoX+DQx1J
        lBAA1reyrC+FpHKgsf1D2A/CYXWBbzus51TsL29Zb6SuokFjAZQQANYbTE0JAOtp669cqhjeudjHl9gV
        ++Sn1n4UvzO2T0oB0J/1pZBU9jO2zx0AdxDGILD6JLYnAsuNn/9rY/vk2j4i0Ezs21j3V4I72If/fm3y
        qrd2PPb/VZfwaHGYl4T2c/jso4b43KzaHgAQ3gewbOPO6UuuZHfs/8clyave2hTgXnxC4Byqd+c93fiZ
        G4Htq250biUEwB3YtvEl6UuuxPrLWafhqz6KTwB0CaMaDfpkZEfsZ1G5L6MqK+EeANhfzazDr+NE9jG2
        /61LFT6+ir3vRs/fELbtWPqfDXwR+6/3pcb2ySkABrOTSxXxvMDYvk53rtcBn3Vc3x7ARYSzwNMIYbCM
        8I7HNoQXqM7BZ5DRSxzWkVwJlwCnYdvGM9OXXMlKbNv3juQVT2wG8AB+lwIplvtJM8+Fq1LOAKyvZ6aY
        impY0wk3AS3q1nNtPfCPuYuo6Hs05wfxWUo4A3gttm2sc99u66OrjYQQqZsO8HPy/7IPuiyLsxvi0hnA
        YHYh3uCTVnsb29+BfeTkGLrAe7EP657Cz4CbcxcxjFIC4E5j+6nU90agNQBWuFQRxwrglNxFDOD03AUM
        q5QAeBz7s+49PQqJoM0BAOHxXJ3n2fsN9mHNsiklAMA+TJN1kIhYrAFwk0sV8XSBt1LfOk+hOffCtlJS
        AFiHabIOExXDttifUDTh2vUxwks6q3IXsoVLSDuKsjuPAGjKU4Rbje3rGABLsf0PN2LfL6ncC7yC+oy4
        uwr4u9xFWJV0BnCLsb21t10M1tP/22jGXfaeWwnvZazMXMcm4EQaNPDHeEoKAOuXZg726aK8tf36fyz3
        EkY/Pj/T548Qek5enunzXZUUALcSkttiX49CHFlfAmpiAEB4qnMCYSTglMOYjwAnEd4ybI3cPahSutlY
        6z8krrefu7BtzxuTV+xvPnAW4X5GzO9p7x5E65QUAP9hrPWixPVOZCbhF8myPXW8sTmsvQgdch7D9/u5
        kTBeYZPmh6ikpAD4uLHWuxPXO5FDsW3Lk4QReNpmO8INuu8SbtINu3+eAM6g3i+CmbXxCzAR68AXOxEG
        Cf2jQy1W1vsRKwm/bm3zBOEX+1zCPa4DCU9wlm5elhAG/tieMPHrJkIv0YeB1cB/A1cBvySEZOuVdAaw
        0KHe1yWueTxnYNuO76QvWeqmpKcAEH657zOu41CPQhxYzwBudKlCGq20AAD7wI11GCC0A7zQuI66vwQk
        CZQYANcb2x9M/gE0diNcv1rUaRxAyaTEALBOgDmV/JcB1lmAHiE815bClRgA1wNPG9dxhEchBtaJQPXr
        L0CZAbCBMIiDxeEehRgcbGxfp3kAJKMSAwDCGG4WBwNzPQoZQgc4yLgOBYAAPgHQMS45WGehnUS+SSD3
        AGYb19G4KawkjlLPAK7Bfh/gGI9ChvBiY/vHqfcw55JQqQHwBKGrp8UxhKmlUrMGwK8JLxGJFBsAAJcZ
        288mz+uh1keQ/+NShbRCyQHgMdR06vfp52EfBcjaEUpapkkv83i7H9u2P0roGJTK8cZ6u8CChPVKzZV8
        BgD2s4A5wNEehQzIeslxG+GVVxFAAfB9h3W802Edg7L2QLT2f5AWKvkSYBtso8Z0CYNqPDdBrbsZ6+wS
        RrMV+X+lnwE8DVxsXMdk4D0OtfSz3GEdVzmsQ1qm5DMACD36rPtgNTAtcp2XGmtU5x8ZU+kBMBn704Au
        8O6INc4lnK1Y6mvsFNYST+mXABAGhTzXYT2nEG+Q1eMc1v1jj0KkfUo/AwDYHfsY+13CTDUxXG2s68/A
        jEi1ScMpAIIrse+LVYRx6T3t5VDXD51rkpbQJcAzPK6RF+E/fZjHWcUFDuuQltIZQDAJuBP7/ngKv6nE
        5xAmv7TWYx0/QFpMAfCMj2DfH13CmHsejwU/4VDLfznUIS2mAHjGTMIUUR4hcKaxlgX4THT5NmMd0nIK
        gGc7BZ8A6AIfMtTxbYfPf5T8cxhIzSkAnm074EF8AmCE4ToIvcHp89X5R/pSAGzN615ALwT+mcGfuBwA
        rHP6bK+bkdJiCoCtbUOYPtsrBLrAtfSfz+9V2O/695ZrLDtAyqEAGNtyfAOgdzZwKeG13D0IlxvzgFcC
        F+LTG7G35Bq2XBpGATC+S/APgRSLdcRjKYgCYHyLsA8YkmN5TYydIe2kAJjYm8l/QFdZroqyF6S1FAD9
        nUf+A3uQ5SlgWaR9IC2lAOhvO0L33twHeL/lM7F2gLSXAmAwu1Lv+wG34/8qshRAATC4lwHryX+wb7ms
        p38fA5ExKQCqOZIwwk7ug3708vaoWyytlvvL20SvATaQf991gS9G3lZpudxf4KY6BHiAvPvuS9G3UlpP
        ATC8JcBvyLPfPptg+6QACgCbqcAnsY/bP+iyjnijD0uBFAA+9geuI+6+up7wEpGIGwWAr6MIr/567qPf
        AycRb+IRKZgCII4DgNOAexhuvzxJmKvgDWj4domkQ/6DsJP582PrAPsAB25e9iWMATBn8zJCGILsoc3L
        LcDlhAE91meoVwqiABApmE4tRQqmABApmAJApGAKAJGCKQBECqYAECmYAkCkYB5dS/UcX6ShdAYgUjAF
        gEjBFAAiBVMAiBRMASBSMAWASMEUACIFUwCIFEwBIFIwBYBIwRQAIgVTAIgUTAEgUjAFgEjBFAAiBVMA
        iBRMASBSMAWASMEUACIFUwCIFEwBIFIwBYBIwRQAIgVTAIgUTAEgUjAFgEjBFAAiBVMAiBRMASBSMAWA
        SMEUACIF6wDd3EWISB46AxApmAJApGAKAJGCKQBECqYAECmYAkCkYAoAkYIpAEQKpgAQKZgCQKRgCgCR
        gikARAqmABApmAJApGAKAJGC/R8NDfycvF2kFwAAAABJRU5ErkJggg==
</value>
  </data>
</root>